/*
 *  Phusion Passenger - https://www.phusionpassenger.com/
 *  Copyright (c) 2018 Phusion Holding B.V.
 *
 *  "Passenger", "Phusion Passenger" and "Union Station" are registered
 *  trademarks of Phusion Holding B.V.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
#ifndef _PASSENGER_APP_DEFINITIONS_ENTRY_H_
#define _PASSENGER_APP_DEFINITIONS_ENTRY_H_

#include <boost/shared_array.hpp>
#include <boost/container/vector.hpp>

#include <Constants.h>
#include <StaticString.h>
#include <DataStructures/StringKeyTable.h>

namespace Passenger {
namespace AppDefinitions {


// The following hints are available:
// @require_non_empty
// @default
// @configkit_key_name
//
// - begin hinted parseable class -
class Entry {
private:
	boost::shared_array<char> storage;

public:
	/**
	 * @hinted_parseable
	 * @require_non_empty
	 */
	StaticString key;

	/**
	 * @hinted_parseable
	 * @require_non_empty
	 */
	StaticString location;

	/**
	 * @hinted_parseable
	 * @require_non_empty
	 */
	StaticString type;

	/**
	 * @hinted_parseable
	 */
	StaticString startupFile;

	/**
	 * @hinted_parseable
	 * @require_non_empty
	 */
	StaticString startCommand;

	/**
	 * @hinted_parseable
	 * @default DEFAULT_APP_ENV
	 */
	StaticString appEnv;

	/**
	 * @hinted_parseable
	 * @configkit_key_name base_uri
	 * @default "/"
	 */
	StaticString baseURI;

	/**
	 * @hinted_parseable
	 */
	StaticString logFile;

	/**
	 * @hinted_parseable
	 */
	StaticString user;

	/**
	 * @hinted_parseable
	 */
	StaticString group;

	/**
	 * @hinted_parseable
	 */
	StaticString meteorAppSettings;

	/**
	 * @hinted_parseable
	 * @default DEFAULT_SPAWN_METHOD
	 */
	StaticString spawnMethod;

	/**
	 * @hinted_parseable
	 * @default "tmp"
	 */
	StaticString restartDir;

	/**
	 * @hinted_parseable
	 * @default DEFAULT_STICKY_SESSIONS_COOKIE_NAME
	 */
	StaticString stickySessionsCookieName;


	/**
	 * @hinted_parseable
	 */
	StringKeyTable<StaticString> languageRuntimes;

	/**
	 * @hinted_parseable
	 */
	StringKeyTable<StaticString> environmentVariables;

	/**
	 * @hinted_parseable
	 */
	boost::container::vector<StaticString> monitorLogFiles;


	/**
	 * @hinted_parseable
	 * @default true
	 */
	bool abortWebsocketsOnProcessShutdown: 1;

	/**
	 * @hinted_parseable
	 * @default false
	 */
	bool friendlyErrorPages: 1;

	/**
	 * @hinted_parseable
	 * @default false
	 */
	bool loadShellEnvvars: 1;

	/**
	 * @hinted_parseable
	 * @default false
	 */
	bool stickySessions: 1;


	/**
	 * @hinted_parseable
	 * @default DEFAULT_LOG_LEVEL
	 */
	int logLevel;

	/**
	 * In milliseconds.
	 *
	 * @hinted_parseable
	 * @default DEFAULT_TIMEOUT
	 */
	int startTimeout;

	/**
	 * @hinted_parseable
	 * @default -1
	 */
	int forceMaxConcurrentRequestsPerProcess;

	/**
	 * @hinted_parseable
	 * @default 0
	 */
	unsigned int fileDescriptorUlimit;

	/**
	 * @hinted_parseable
	 * @default DEFAULT_LVE_MIN_UID
	 */
	unsigned int lveMinUid;

	/**
	 * @hinted_parseable
	 * @default 1
	 */
	unsigned int minInstances;

	/**
	 * In seconds.
	 *
	 * @hinted_parseable
	 * @default DEFAULT_MAX_PRELOADER_IDLE_TIME
	 */
	unsigned int maxPreloaderIdleTime;

	/**
	 * @hinted_parseable
	 * @default DEFAULT_MAX_REQUEST_QUEUE_SIZE
	 */
	unsigned int maxRequestQueueSize;

	/**
	 * @hinted_parseable
	 * @default 0
	 */
	unsigned int maxRequests;

	/**************/
	/**************/

	Entry();

	void internStrings();
};
// - end hinted parseable class -


#include <AppDefinitions/Entry/AutoGeneratedCode.h>


} // namespace AppDefinitions
} // namespace Passenger

#endif /* _PASSENGER_APP_DEFINITIONS_ENTRY_H_ */
