/*
 *  Phusion Passenger - https://www.phusionpassenger.com/
 *  Copyright (c) 2018 Phusion Holding B.V.
 *
 *  "Passenger", "Phusion Passenger" and "Union Station" are registered
 *  trademarks of Phusion Holding B.V.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */

/*
 * AppDefinitions/Schema/AutoGeneratedCode.h is automatically generated from
 * AppDefinitions/Schema/AutoGeneratedCode.h.cxxcodebuilder by the build system.
 * It uses the comment hints from AppDefinitions/Schema.h.
 *
 * To force regenerating this file:
 *   rm -f src/cxx_supportlib/AppDefinitions/Schema/AutoGeneratedCode.h
 *   rake src/cxx_supportlib/AppDefinitions/Schema/AutoGeneratedCode.h
 */

inline void
Passenger::AppDefinitions::Schema::Schema() {
	using namespace ConfigKit;

	add("key", STRING_TYPE, REQUIRED);
	add("location", STRING_TYPE, REQUIRED);
	add("type", STRING_TYPE, REQUIRED);
	add("startup_file", STRING_TYPE, REQUIRED);
	add("start_command", STRING_TYPE, REQUIRED);
	add("app_env", STRING_TYPE, OPTIONAL, DEFAULT_APP_ENV);
	add("base_uri", STRING_TYPE, OPTIONAL, "/");
	add("log_file", STRING_TYPE, REQUIRED);
	add("user", STRING_TYPE, REQUIRED);
	add("group", STRING_TYPE, REQUIRED);
	add("meteor_app_settings", STRING_TYPE, REQUIRED);
	add("spawn_method", STRING_TYPE, OPTIONAL, DEFAULT_SPAWN_METHOD);
	add("restart_dir", STRING_TYPE, OPTIONAL, "tmp");
	add("sticky_sessions_cookie_name", STRING_TYPE, OPTIONAL, DEFAULT_STICKY_SESSIONS_COOKIE_NAME);
	add("language_runtimes", OBJECT_TYPE, REQUIRED);
	add("environment_variables", OBJECT_TYPE, REQUIRED);
	add("monitor_log_files", STRING_ARRAY_TYPE, REQUIRED);
	add("abort_websockets_on_process_shutdown", BOOL_TYPE, OPTIONAL, true);
	add("friendly_error_pages", BOOL_TYPE, OPTIONAL, false);
	add("load_shell_envvars", BOOL_TYPE, OPTIONAL, false);
	add("sticky_sessions", BOOL_TYPE, OPTIONAL, false);
	add("log_level", INT_TYPE, OPTIONAL, DEFAULT_LOG_LEVEL);
	add("start_timeout", INT_TYPE, OPTIONAL, DEFAULT_TIMEOUT);
	add("force_max_concurrent_requests_per_process", INT_TYPE, OPTIONAL, -1);
	add("file_descriptor_ulimit", UINT_TYPE, OPTIONAL, 0);
	add("lve_min_uid", UINT_TYPE, OPTIONAL, DEFAULT_LVE_MIN_UID);
	add("min_instances", UINT_TYPE, OPTIONAL, 1);
	add("max_preloader_idle_time", UINT_TYPE, OPTIONAL, DEFAULT_MAX_PRELOADER_IDLE_TIME);
	add("max_request_queue_size", UINT_TYPE, OPTIONAL, DEFAULT_MAX_REQUEST_QUEUE_SIZE);
	add("max_requests", UINT_TYPE, OPTIONAL, 0);

	finalize();
}

